000000:		    . = 100                     ; данные располагаются с 100 адреса
000100:		A:  .BYTE 34, 12, -1, 66        ; массив (А - константа, равна адресу 100), сумма = 133, так как все числа восьмеричные
	    034
	 012
	    377
	 066
000104:		N:  .BYTE 4                     ; размер массива А
	    004
000105:		
000105:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000105:		; Sum all data in the A array and store the summ into R0
000105:		;    R0 - sum
000105:		;    R1 - counter
000105:		;    R2 - address
000105:		;    R3 - (byte)*R2
000105:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
000105:		    .=1000                     ; код располагается с 1000 адреса
001000:		    mov #4, R1                 ; замените потом #4 на @#N и отладьте 3 моду
	 012701
	 000004
001004:		    mov #A, R2                 ; R2 - адрес начала массива
	 012702
	 000100
001010:		    clr R0                     ; R0 = 0
	 005000
001012:		    
001012:		LOOP:
001012:		    movb (R2)+, R3             ; R3 = *R2; R2++ записывает в R3 число, лежащее по адресу, хранимому в R2, этот адрес увеличивается
	 112203
001014:		    add R3, R0                 ; очередное число прибавляется к текущей сумме
	 060300
001016:		    sob R1, LOOP               ; if (--R1 != 0) goto LOOP;
	 077103
001020:		    
001020:		    halt
	 000000



0040 0005
1c
0a
ff
36
04
0200 0012
c1
15
04
00
c2
15
40
00
00
0a
83
94
c0
60
43
7e
00
00




001000 012701: MOV #4 R1 
001004 012702: MOV #100 R2 
001010 005000: 001012 112203: MOVb  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 112203: MOVb  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 112203: MOVb  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 112203: MOVb  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001020 000000: HALT 

R0 = 000437 R2 = 000110 R4 = 000000 sp = 000000	
R1 = 000000 R3 = 000000 R5 = 000000 pc = 001022

