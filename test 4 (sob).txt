000000:		    . = 100                     ; данные располагаются с 100 адреса
000100:		A:  .WORD 34, 12, -1, 66        ; массив (А - константа, равна адресу 100), сумма = 133, так как все числа восьмеричные
	 000034
	 000012
	 177777
	 000066
000110:		N:  .WORD 4                     ; размер массива А
	 000004
000112:		
000112:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000112:		; Sum all data in the A array and store the summ into R0
000112:		;    R0 - sum
000112:		;    R1 - counter
000112:		;    R2 - address
000112:		;    R3 - (byte)*R2
000112:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
000112:		    .=1000                     ; код располагается с 1000 адреса
001000:		    mov @#N, R1                 ; замените потом #4 на @#N и отладьте 3 моду
	 013701
	 000110
001004:		    mov #A, R2                 ; R2 - адрес начала массива
	 012702
	 000100
001010:		    clr R0                     ; R0 = 0
	 005000
001012:		    
001012:		LOOP:
001012:		    mov (R2)+, R3             ; R3 = *R2; R2++ записывает в R3 число, лежащее по адресу, хранимому в R2, этот адрес увеличивается
	 012203
001014:		    add R3, R0                 ; очередное число прибавляется к текущей сумме
	 060300
001016:		    sob R1, LOOP               ; if (--R1 != 0) goto LOOP;
	 077103
001020:		    
001020:		    halt
	 000000

0040 000a
1c
00
0a
00
ff
ff
36
00
04
00
0200 0012
c1
17
48
00
c2
15
40
00
00
0a
83
14
c0
60
43
7e
00
00


001000 013701: MOV @#110R1 
001004 012702: MOV #100 R2 
001010 005000: 001012 012203: MOV  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 012203: MOV  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 012203: MOV  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001012 012203: MOV  (R2)+ R3 
001014 060300: ADD R3 R0 
001016 077103: SOB 
001020 000000: HALT 

R0 = 000133 R2 = 000110 R4 = 000000 sp = 000000	
R1 = 000000 R3 = 000066 R5 = 000000 pc = 001022